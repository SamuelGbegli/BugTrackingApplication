@page
@model BugTrackingApplication.Pages.Bugs.IndexModel

@{
    ViewData["Title"] = "Index";
}

@{
    if(Model.Project is not null)
    {
        <h1>List of bugs in @Model.Project.Name</h1>
        <p>Total bugs: @Model.Bugs.Count()</p>
        <p>Bugs currently open: @Model.Bugs.Where(b => b.IsOpen).Count()</p>
    }
    else
    {
        <h1>List of Bugs</h1>
    }
}



<p>
    <a asp-page="Create" asp-route-id="@Model.Project.ID">Add new bug</a>
</p>

<form method="get">
    <input type="hidden" name="id" asp-for="@Model.Project.ID" />
    <label>Sort by:</label>
    <select name="Sort" asp-for="@Model.Sort">
        <option>Date created</option>
        <option>Last updated</option>
        <option>Severity</option>
        <option>Title</option>
    </select>
    <label>Order:</label>
    <select name="Order" asp-for="@Model.Order">
        <option>Ascending</option>
        <option>Descending</option>
    </select>
    <br/>
    
    <input type="submit" class="btn btn-primary" value="Sort" asp-route-id="@Model.Project.ID"/>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Bugs[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bugs[0].Severity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bugs[0].Description)
            </th>
            <th>
                Status
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bugs[0].Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bugs[0].Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bugs[0].Project)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Bugs) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Severity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                    @if (item.IsOpen)
                    {
                        <span>Open</span>
                    }
                    else
                    {
                        <span>Closed</span>
                    }
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                <a asp-page="../Projects/Details" asp-route-id="@item.ProjectID">@item.Project.Name</a>
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="../Comments/Index" asp-route-id="@item.ID">View comments</a> |
                        <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
